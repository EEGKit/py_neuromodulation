
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_1_example_BIDS.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_1_example_BIDS.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_1_example_BIDS.py:


ECoG Movement decoding example 
==============================

.. GENERATED FROM PYTHON SOURCE LINES 8-17

This example notebook read openly accessible data from the publication
*Electrocorticography is superior to subthalamic local field potentials
for movement decoding in Parkinsonâ€™s disease*
(`Merk et al. 2022 <https://elifesciences.org/articles/75126>_`).
The dataset is available `here <https://doi.org/10.7910/DVN/IO2FLM>`_.

For simplicity one example subject is automatically shipped within
this repo at the *py_neuromodulation/data* folder, stored in
`iEEG BIDS <https://www.nature.com/articles/s41597-019-0105-7>`_ format.

.. GENERATED FROM PYTHON SOURCE LINES 19-32

.. code-block:: Python

    from sklearn import metrics, model_selection, linear_model
    import matplotlib.pyplot as plt

    import py_neuromodulation as nm
    from py_neuromodulation import (
        nm_analysis,
        nm_decode,
        nm_define_nmchannels,
        nm_IO,
        nm_plots,
        nm_settings,
    )








.. GENERATED FROM PYTHON SOURCE LINES 33-36

Let's read the example using `mne_bids <https://mne.tools/mne-bids/stable/index.html>`_.
The resulting raw object is of type `mne.RawArray <https://mne.tools/stable/generated/mne.io.RawArray.html>`_.
We can use the properties such as sampling frequency, channel names, channel types all from the mne array and create the *nm_channels* DataFrame:

.. GENERATED FROM PYTHON SOURCE LINES 36-68

.. code-block:: Python


    (
        RUN_NAME,
        PATH_RUN,
        PATH_BIDS,
        PATH_OUT,
        datatype,
    ) = nm_IO.get_paths_example_data()

    (
        raw,
        data,
        sfreq,
        line_noise,
        coord_list,
        coord_names,
    ) = nm_IO.read_BIDS_data(
        PATH_RUN=PATH_RUN
    )

    nm_channels = nm_define_nmchannels.set_channels(
        ch_names=raw.ch_names,
        ch_types=raw.get_channel_types(),
        reference="default",
        bads=raw.info["bads"],
        new_names="default",
        used_types=("ecog", "dbs", "seeg"),
        target_keywords=["MOV_RIGHT"],
    )

    nm_channels





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Extracting parameters from /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/data/sub-testsub/ses-EphysMedOff/ieeg/sub-testsub_ses-EphysMedOff_task-gripforce_run-0_ieeg.vhdr...
    Setting channel info structure...
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_IO.py:63: RuntimeWarning: Did not find any events.tsv associated with sub-testsub_ses-EphysMedOff_task-gripforce_run-0.

    The search_str was "/home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/data/sub-testsub/**/ieeg/sub-testsub_ses-EphysMedOff*events.tsv"
      raw_arr = read_raw_bids(bids_path)
    Reading channel info from /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/data/sub-testsub/ses-EphysMedOff/ieeg/sub-testsub_ses-EphysMedOff_task-gripforce_run-0_channels.tsv.
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_IO.py:63: RuntimeWarning: The unit for channel(s) MOV_RIGHT has changed from V to NA.
      raw_arr = read_raw_bids(bids_path)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_IO.py:63: RuntimeWarning: Other is not an MNE-Python coordinate frame for IEEG data and so will be set to 'unknown'
      raw_arr = read_raw_bids(bids_path)
    Reading electrode coords from /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/data/sub-testsub/ses-EphysMedOff/ieeg/sub-testsub_ses-EphysMedOff_space-mni_electrodes.tsv.
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_IO.py:63: RuntimeWarning: There are channels without locations (n/a) that are not marked as bad: ['MOV_RIGHT']
      raw_arr = read_raw_bids(bids_path)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_IO.py:63: RuntimeWarning: Not setting position of 1 misc channel found in montage:
    ['MOV_RIGHT']
    Consider setting the channel types to be of EEG/sEEG/ECoG/DBS/fNIRS using inst.set_channel_types before calling inst.set_montage, or omit these channels when creating your montage.
      raw_arr = read_raw_bids(bids_path)


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>name</th>
          <th>rereference</th>
          <th>used</th>
          <th>target</th>
          <th>type</th>
          <th>status</th>
          <th>new_name</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>LFP_RIGHT_0</td>
          <td>LFP_RIGHT_2</td>
          <td>1</td>
          <td>0</td>
          <td>dbs</td>
          <td>good</td>
          <td>LFP_RIGHT_0-LFP_RIGHT_2</td>
        </tr>
        <tr>
          <th>1</th>
          <td>LFP_RIGHT_1</td>
          <td>LFP_RIGHT_0</td>
          <td>1</td>
          <td>0</td>
          <td>dbs</td>
          <td>good</td>
          <td>LFP_RIGHT_1-LFP_RIGHT_0</td>
        </tr>
        <tr>
          <th>2</th>
          <td>LFP_RIGHT_2</td>
          <td>LFP_RIGHT_1</td>
          <td>1</td>
          <td>0</td>
          <td>dbs</td>
          <td>good</td>
          <td>LFP_RIGHT_2-LFP_RIGHT_1</td>
        </tr>
        <tr>
          <th>3</th>
          <td>ECOG_RIGHT_0</td>
          <td>average</td>
          <td>1</td>
          <td>0</td>
          <td>ecog</td>
          <td>good</td>
          <td>ECOG_RIGHT_0-avgref</td>
        </tr>
        <tr>
          <th>4</th>
          <td>ECOG_RIGHT_1</td>
          <td>average</td>
          <td>1</td>
          <td>0</td>
          <td>ecog</td>
          <td>good</td>
          <td>ECOG_RIGHT_1-avgref</td>
        </tr>
        <tr>
          <th>5</th>
          <td>ECOG_RIGHT_2</td>
          <td>average</td>
          <td>1</td>
          <td>0</td>
          <td>ecog</td>
          <td>good</td>
          <td>ECOG_RIGHT_2-avgref</td>
        </tr>
        <tr>
          <th>6</th>
          <td>ECOG_RIGHT_3</td>
          <td>average</td>
          <td>1</td>
          <td>0</td>
          <td>ecog</td>
          <td>good</td>
          <td>ECOG_RIGHT_3-avgref</td>
        </tr>
        <tr>
          <th>7</th>
          <td>ECOG_RIGHT_4</td>
          <td>average</td>
          <td>1</td>
          <td>0</td>
          <td>ecog</td>
          <td>good</td>
          <td>ECOG_RIGHT_4-avgref</td>
        </tr>
        <tr>
          <th>8</th>
          <td>ECOG_RIGHT_5</td>
          <td>average</td>
          <td>1</td>
          <td>0</td>
          <td>ecog</td>
          <td>good</td>
          <td>ECOG_RIGHT_5-avgref</td>
        </tr>
        <tr>
          <th>9</th>
          <td>MOV_RIGHT</td>
          <td>None</td>
          <td>0</td>
          <td>1</td>
          <td>misc</td>
          <td>good</td>
          <td>MOV_RIGHT</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-71

This example contains the grip force movement traces, we'll use the *MOV_RIGHT* channel as a decoding target channel.
Let's check some of the raw feature and time series traces:

.. GENERATED FROM PYTHON SOURCE LINES 71-89

.. code-block:: Python


    plt.figure(figsize=(12, 4), dpi=300)
    plt.subplot(121)
    plt.plot(raw.times, data[-1, :])
    plt.xlabel("Time [s]")
    plt.ylabel("a.u.")
    plt.title("Movement label")
    plt.xlim(0, 20)

    plt.subplot(122)
    for idx, ch_name in enumerate(nm_channels.query("used == 1").name):
        plt.plot(raw.times, data[idx, :] + idx * 300, label=ch_name)
    plt.legend(bbox_to_anchor=(1, 0.5), loc="center left")
    plt.title("ECoG + STN-LFP time series")
    plt.xlabel("Time [s]")
    plt.ylabel("Voltage a.u.")
    plt.xlim(0, 20)




.. image-sg:: /auto_examples/images/sphx_glr_plot_1_example_BIDS_001.png
   :alt: Movement label, ECoG + STN-LFP time series
   :srcset: /auto_examples/images/sphx_glr_plot_1_example_BIDS_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (0.0, 20.0)



.. GENERATED FROM PYTHON SOURCE LINES 90-111

.. code-block:: Python

    settings = nm_settings.get_default_settings()
    settings = nm_settings.set_settings_fast_compute(settings)

    settings["features"]["welch"] = True
    settings["features"]["fft"] = True
    settings["features"]["bursts"] = True
    settings["features"]["sharpwave_analysis"] = True
    settings["features"]["coherence"] = True
    settings["coherence"]["channels"] = [["LFP_RIGHT_0", "ECOG_RIGHT_0"]]
    settings["coherence"]["frequency_bands"] = ["high beta", "low gamma"]
    settings["sharpwave_analysis_settings"]["estimator"]["mean"] = []
    for sw_feature in list(
        settings["sharpwave_analysis_settings"]["sharpwave_features"].keys()
    ):
        settings["sharpwave_analysis_settings"]["sharpwave_features"][
            sw_feature
        ] = True
        settings["sharpwave_analysis_settings"]["estimator"]["mean"].append(
            sw_feature
        )








.. GENERATED FROM PYTHON SOURCE LINES 112-122

.. code-block:: Python

    stream = nm.Stream(
        sfreq=sfreq,
        nm_channels=nm_channels,
        settings=settings,
        line_noise=line_noise,
        coord_list=coord_list,
        coord_names=coord_names,
        verbose=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 123-129

.. code-block:: Python

    features = stream.run(
        data=data,
        out_path_root=PATH_OUT,
        folder_name=RUN_NAME,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)
    /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/nm_normalization.py:195: RuntimeWarning: invalid value encountered in divide
      current = (current - nan_mean(previous, axis=0)) / nan_std(previous, axis=0)




.. GENERATED FROM PYTHON SOURCE LINES 130-133

Feature Analysis Movement
-------------------------
The obtained performances can now be read and visualized using the :class:`nm_analysis.Feature_Reader`.

.. GENERATED FROM PYTHON SOURCE LINES 133-142

.. code-block:: Python


    # initialize analyzer
    feature_reader = nm_analysis.Feature_Reader(
        feature_dir=PATH_OUT,
        feature_file=RUN_NAME,
    )
    feature_reader.label_name = "MOV_RIGHT"
    feature_reader.label = feature_reader.feature_arr["MOV_RIGHT"]








.. GENERATED FROM PYTHON SOURCE LINES 143-145

.. code-block:: Python

    feature_reader.feature_arr.iloc[100:108, -6:]






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>icoh_LFP_RIGHT_0_to_ECOG_RIGHT_0_max_fband_high beta</th>
          <th>icoh_LFP_RIGHT_0_to_ECOG_RIGHT_0_mean_fband_low gamma</th>
          <th>icoh_LFP_RIGHT_0_to_ECOG_RIGHT_0_max_fband_low gamma</th>
          <th>icoh_LFP_RIGHT_0_to_ECOG_RIGHT_0_max_allfbands_low gamma</th>
          <th>time</th>
          <th>MOV_RIGHT</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>100</th>
          <td>-0.434049</td>
          <td>0.640233</td>
          <td>-0.041695</td>
          <td>0.836483</td>
          <td>11000</td>
          <td>-0.150107</td>
        </tr>
        <tr>
          <th>101</th>
          <td>0.514665</td>
          <td>1.558333</td>
          <td>1.234896</td>
          <td>0.829533</td>
          <td>11100</td>
          <td>-0.280238</td>
        </tr>
        <tr>
          <th>102</th>
          <td>0.592526</td>
          <td>0.723595</td>
          <td>-0.162748</td>
          <td>0.822752</td>
          <td>11200</td>
          <td>-0.305062</td>
        </tr>
        <tr>
          <th>103</th>
          <td>0.418552</td>
          <td>0.609162</td>
          <td>0.244190</td>
          <td>0.816135</td>
          <td>11300</td>
          <td>-0.312851</td>
        </tr>
        <tr>
          <th>104</th>
          <td>1.698498</td>
          <td>-0.090110</td>
          <td>0.603308</td>
          <td>0.809676</td>
          <td>11400</td>
          <td>-0.305154</td>
        </tr>
        <tr>
          <th>105</th>
          <td>-0.627310</td>
          <td>1.502582</td>
          <td>2.957540</td>
          <td>0.803367</td>
          <td>11500</td>
          <td>-0.305200</td>
        </tr>
        <tr>
          <th>106</th>
          <td>-0.137041</td>
          <td>0.814290</td>
          <td>1.368967</td>
          <td>0.797203</td>
          <td>11600</td>
          <td>-0.311440</td>
        </tr>
        <tr>
          <th>107</th>
          <td>-0.508566</td>
          <td>1.812638</td>
          <td>3.000000</td>
          <td>0.791180</td>
          <td>11700</td>
          <td>-0.306840</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 146-148

.. code-block:: Python

    print(feature_reader.feature_arr.shape)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (181, 552)




.. GENERATED FROM PYTHON SOURCE LINES 149-151

.. code-block:: Python

    feature_reader._get_target_ch()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    'MOV_RIGHT'



.. GENERATED FROM PYTHON SOURCE LINES 152-162

.. code-block:: Python

    feature_reader.plot_target_averaged_channel(
        ch="ECOG_RIGHT_0",
        list_feature_keywords=None,
        epoch_len=4,
        threshold=0.5,
        ytick_labelsize=7,
        figsize_x=12,
        figsize_y=12,
    )




.. image-sg:: /auto_examples/images/sphx_glr_plot_1_example_BIDS_002.png
   :alt: Movement aligned features channel: ECOG_RIGHT_0, MOV_RIGHT
   :srcset: /auto_examples/images/sphx_glr_plot_1_example_BIDS_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 163-174

.. code-block:: Python

    feature_reader.plot_all_features(
        ytick_labelsize=6,
        clim_low=-2,
        clim_high=2,
        ch_used="ECOG_RIGHT_0",
        time_limit_low_s=0,
        time_limit_high_s=20,
        normalize=True,
        save=True,
    )




.. image-sg:: /auto_examples/images/sphx_glr_plot_1_example_BIDS_003.png
   :alt: Feature Plot sub-testsub_ses-EphysMedOff_task-gripforce_run-0
   :srcset: /auto_examples/images/sphx_glr_plot_1_example_BIDS_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 175-186

.. code-block:: Python

    nm_plots.plot_corr_matrix(
        feature=feature_reader.feature_arr.filter(regex="ECOG_RIGHT_0"),
        ch_name="ECOG_RIGHT_0-avgref",
        feature_names=list(feature_reader.feature_arr.filter(
            regex="ECOG_RIGHT_0-avgref"
        ).columns),
        feature_file=feature_reader.feature_file,
        show_plot=True,
        figsize=(15, 15),
    )




.. image-sg:: /auto_examples/images/sphx_glr_plot_1_example_BIDS_004.png
   :alt: Correlation matrix features channel: ECOG_RIGHT_0-avgref
   :srcset: /auto_examples/images/sphx_glr_plot_1_example_BIDS_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: title={'center': 'Correlation matrix features channel: ECOG_RIGHT_0-avgref'}>



.. GENERATED FROM PYTHON SOURCE LINES 187-200

Decoding
--------

The main focus of the *py_neuromodulation* pipeline is feature estimation.
Nevertheless, the user can also use the pipeline for machine learning decoding.
It can be used for regression and classification problems and also dimensionality reduction such as PCA and CCA.

Here, we show an example using the XGBOOST classifier. The used labels came from a continuous grip force movement target, named "MOV_RIGHT".

First we initialize the :class:`~nm_decode.Decoder` class, which the specified *validation method*, here being a simple 3-fold cross validation,
the evaluation metric, used machine learning model, and the channels we want to evaluate performances for.

There are many more implemented methods, but we will here limit it to the ones presented.

.. GENERATED FROM PYTHON SOURCE LINES 200-213

.. code-block:: Python


    model = linear_model.LinearRegression()

    feature_reader.decoder = nm_decode.Decoder(
        features=feature_reader.feature_arr,
        label=feature_reader.label,
        label_name=feature_reader.label_name,
        used_chs=feature_reader.used_chs,
        model=model,
        eval_method=metrics.r2_score,
        cv_method=model_selection.KFold(n_splits=3, shuffle=True),
    )








.. GENERATED FROM PYTHON SOURCE LINES 214-221

.. code-block:: Python

    performances = feature_reader.run_ML_model(
        estimate_channels=True,
        estimate_gridpoints=False,
        estimate_all_channels_combined=True,
        save_results=True,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    model being saved to: /home/runner/.venv/lib/python3.10/site-packages/py_neuromodulation/data/derivatives/sub-testsub_ses-EphysMedOff_task-gripforce_run-0/sub-testsub_ses-EphysMedOff_task-gripforce_run-0_LM_ML_RES.p




.. GENERATED FROM PYTHON SOURCE LINES 222-223

The performances are a dictionary that can be transformed into a DataFrame:

.. GENERATED FROM PYTHON SOURCE LINES 223-228

.. code-block:: Python


    df_per = feature_reader.get_dataframe_performances(performances)

    df_per






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>performance_test</th>
          <th>performance_train</th>
          <th>sub</th>
          <th>ch</th>
          <th>ch_type</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0.056277</td>
          <td>0.814445</td>
          <td>testsub</td>
          <td>LFP_RIGHT_0-LFP_RIGHT_2</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0.057667</td>
          <td>0.631235</td>
          <td>testsub</td>
          <td>LFP_RIGHT_1-LFP_RIGHT_0</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0.000000</td>
          <td>0.667353</td>
          <td>testsub</td>
          <td>LFP_RIGHT_2-LFP_RIGHT_1</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0.008545</td>
          <td>0.741185</td>
          <td>testsub</td>
          <td>ECOG_RIGHT_0-avgref</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0.000000</td>
          <td>0.738925</td>
          <td>testsub</td>
          <td>ECOG_RIGHT_1-avgref</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>5</th>
          <td>0.000000</td>
          <td>0.763539</td>
          <td>testsub</td>
          <td>ECOG_RIGHT_2-avgref</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>6</th>
          <td>0.153561</td>
          <td>0.767053</td>
          <td>testsub</td>
          <td>ECOG_RIGHT_3-avgref</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>7</th>
          <td>0.053592</td>
          <td>0.700677</td>
          <td>testsub</td>
          <td>ECOG_RIGHT_4-avgref</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>8</th>
          <td>0.000000</td>
          <td>0.707784</td>
          <td>testsub</td>
          <td>ECOG_RIGHT_5-avgref</td>
          <td>electrode ch</td>
        </tr>
        <tr>
          <th>9</th>
          <td>0.388553</td>
          <td>1.000000</td>
          <td>testsub</td>
          <td>all_ch_combined</td>
          <td>all ch combinded</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 229-241

.. code-block:: Python

    ax = nm_plots.plot_df_subjects(
        df_per,
        x_col="sub",
        y_col="performance_test",
        hue="ch_type",
        PATH_SAVE=PATH_OUT / RUN_NAME / (RUN_NAME + "_decoding_performance.png"),
        figsize_tuple=(8, 5),
    )
    ax.set_ylabel(r"$R^2$ Correlation")
    ax.set_xlabel("Subject 000")
    ax.set_title("Performance comparison Movement decoding")
    plt.tight_layout()



.. image-sg:: /auto_examples/images/sphx_glr_plot_1_example_BIDS_005.png
   :alt: Performance comparison Movement decoding
   :srcset: /auto_examples/images/sphx_glr_plot_1_example_BIDS_005.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 15.008 seconds)


.. _sphx_glr_download_auto_examples_plot_1_example_BIDS.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_1_example_BIDS.ipynb <plot_1_example_BIDS.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_1_example_BIDS.py <plot_1_example_BIDS.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
